The error ImportError: no pq wrapper available suggests that psycopg is not properly installed or its dependencies are missing. The new langchain_postgres library relies on psycopg instead of psycopg2, but it looks like the required psycopg_c or psycopg_binary modules are not available.

üîπ Solution: Fix psycopg Installation

1Ô∏è‚É£ Uninstall Conflicting Versions

First, remove any old versions of psycopg and psycopg2:

pip uninstall psycopg psycopg2 psycopg2-binary -y

2Ô∏è‚É£ Install the Correct psycopg Version

Now, install the required dependencies:

pip install psycopg[c,pq] --no-cache-dir

		‚Ä¢	psycopg[c,pq] ensures the correct backend (C implementation with libpq support).
	‚Ä¢	--no-cache-dir ensures a fresh install without old dependencies.

3Ô∏è‚É£ Verify Installation

Run:

python -c "import psycopg; print(psycopg.__version__)"

If installed correctly, it should return the psycopg version.

üîπ Alternative: Use psycopg2 Instead

If psycopg keeps causing issues, we can force langchain_postgres to use psycopg2 by installing:

pip install psycopg2-binary

Then, modify your PostgreSQL connection setup:

from langchain_postgres import PGVector
import psycopg2  # Ensure psycopg2 is used instead of psycopg

# PostgreSQL Connection URI
connection_uri = f"postgresql://{PG_USER}:{PG_PASSWORD}@{PG_HOST}/{PG_DATABASE}"

# Initialize PGVector
db = PGVector(
    connection_uri=connection_uri,
    collection_name=PG_TABLE,
    embedding_function=embedding_model,
)
retriever = db.as_retriever(search_kwargs={'k': 5})

üîπ Try These Steps and Let Me Know
	1.	Uninstall old packages (psycopg, psycopg2) ‚úÖ
	2.	Reinstall psycopg[c,pq] or use psycopg2-binary ‚úÖ
	3.	Verify with import psycopg ‚úÖ
	4.	Re-run your script ‚úÖ

This should fix the ImportError and allow langchain_postgres to work correctly. Let me know if you need further debugging! üöÄ
